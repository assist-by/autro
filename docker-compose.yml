version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  abready:
    build:
      context: ./abready
      dockerfile: Dockerfile
    ports:
      - "8500:8500"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://abready:8500/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  abgateway:
    build:
      context: ./abgateway
      dockerfile: Dockerfile
    ports:
      - "50050:50050"
    depends_on:
      kafka:
        condition: service_healthy
      abready:
        condition: service_healthy

  abprice:
    build:
      context: ./abprice
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      abready:
        condition: service_healthy

  abnotification:
    build:
      context: ./abnotification
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      abready:
        condition: service_healthy
    environment:
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}

  absignal:
    build:
      context: ./absignal
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      abready:
        condition: service_healthy